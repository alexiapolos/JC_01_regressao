---
title: "Jornal Club 1: Modelos de Regressão"
author: "LiaaOnco"
date: "`r Sys.Date()`"
output:
  html_document:
    toc: true
    toc_depth: 2
---

## Introdução

Esta aula prática tem como objetivo aplicar modelos de regressão em dados de mundo real provenientes de registros hospitalares de câncer (RHCs). Serão aplicados e comparados três tipos de modelos: regressão linear simples, regressão múltipla e regressão não linear.

## Carregamento de dados e pacotes

```{r}
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(ggpmisc)

load("dados_rhc_17_tratados.Rdata")
```

You can add options to executable code like this

```{r}
str(subset)
```

## Particionamento

```{r}
set.seed(123)
data_split <- initial_split(subset, prop = 0.8)
train_data <- training(data_split)
test_data <- testing(data_split)

dim(train_data)
dim(test_data)
```

## Regressão Linear Simples

**Objetivo:** Avaliar a relação entre o estadiamento clínico (`estadiamento`) e a idade (`idade`) ao diagnóstico.

### Modelagem

```{r}
linear_recipe <- recipe(idade ~ estadiamento, data = train_data)
linear_model <- linear_reg() %>% set_engine("lm")

linear_workflow <- workflow() %>%
  add_recipe(linear_recipe) %>%
  add_model(linear_model)

linear_fit <- linear_workflow %>% fit(data = train_data)
```

### Resultados

```{r}
tidy(linear_fit)
```

### Teste do modelo

```{r}
linear_preds <- predict(linear_fit, test_data) %>%
  bind_cols(test_data)

linear_metrics <- metrics(data = linear_preds,
                          truth = idade,
                          estimate = .pred)
linear_metrics
```

### Visualizaçãoo

```{r}
ggplot(train_data, aes(x = estadiamento, y = idade)) +
  geom_point(color = "blue", size = 2, alpha = 0.8) +  # Pontos
  geom_smooth(method = "lm", color = "red", se = TRUE) +  # Linha de regressão com IC
  stat_poly_eq(
    aes(label = paste(..eq.label.., ..adj.rr.label.., sep = "~~~")),
    formula = y ~ x,
    parse = TRUE,
    color = "black"
  ) +  # Equação e R² ajustado
  labs(
    title = "Gráfico de Regressão",
    x = "Estadiamento Clínico",
    y = "Idade ao Diagnóstico"
  ) +
  theme_minimal(base_size = 14)  # Tema minimalista
```

## Regressão Linear Múltipla

**Objetivo:** Avaliar a relação de múltiplos fatores (`tabagismo`, `sexo`, e `estadiamento`) com a idade ao diagnóstico.

### Modelagem

```{r}
multiple_recipe <- recipe(idade ~ tabagismo + sexo + estadiamento, data = train_data)

multiple_workflow <- workflow() %>%
  add_recipe(multiple_recipe) %>%
  add_model(linear_model)

multiple_fit <- multiple_workflow %>% fit(data = train_data)

```

### Resultados

```{r}
tidy(multiple_fit)
```

### Teste do modelo

```{r}
multiple_preds <- predict(multiple_fit, test_data) %>%
  bind_cols(test_data)

multiple_metrics <- metrics(data = multiple_preds, truth = idade, estimate = .pred)
multiple_metrics
```

### Visualização

```{r}
residuals <- augment(multiple_fit, new_data = train_data)

ggplot(residuals, aes(.pred, .resid)) +
  geom_point() +
  labs(title = "Resíduos da Regressão Múltipla", x = "Fitted Values", y = "Resíduos")
```

## Regressão Não-Linear

**Objetivo:** Modelar a relação não linear entre a idade e o número de diagnósticos por faixa etária usando uma curva polinomial.

### Preparação dos dados

```{r}
agg_data <- train_data %>%
  group_by(faixa_etaria) %>%
  summarise(
    count = n(),
    idade_media = mean(idade, na.rm = TRUE)
  )

print(agg_data)
```

### Modelagem

```{r}
# Criando a receita com uma transformação polinomial
nonlinear_recipe <- recipe(idade_media ~ count, data = agg_data) %>%
  step_poly(count, degree = 2)

# Criando o workflow
nonlinear_workflow <- workflow() %>%
  add_recipe(nonlinear_recipe) %>%
  add_model(linear_reg() %>% set_engine("lm"))

# Ajustando o modelo aos dados agregados
nonlinear_fit <- nonlinear_workflow %>% fit(data = agg_data)

```

### Resultados

```{r}
tidy(nonlinear_fit)
```

### Teste do modelo

```{r}
# Previsões para o conjunto agregado
agg_data <- agg_data %>%
  mutate(pred = predict(nonlinear_fit, new_data = agg_data)$.pred)

# Visualização do ajuste
ggplot(agg_data, aes(x = count, y = idade_media)) +
  geom_point() +
  geom_line(aes(y = pred), color = "deeppink3") +
  labs(
    title = "Regressão Não Linear",
    x = "Número de Registros por Faixa Etária",
    y = "Idade Média"
  )

```

### Visualização

```{r}
ggplot(train_data, aes(x = faixa_etaria, y = idade)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ poly(x, 2), col = "deeppink3") +
  labs(title = "Regressão Não Linear", x = "Faixa Etária", y = "Idade")

```

## Comparação entre modelos

```{r}
comparison <- bind_rows(
  linear_metrics %>% mutate(Model = "Linear"),
  multiple_metrics %>% mutate(Model = "Múltiplo"))

comparison
```

## Discussão

Possíveis discussões

-   O modelo **regressão linear simples** mostrou que o estadiamento tem uma relação direta com a idade ao diagnóstico.

-   A **regressão múltipla** evidenciou como múltiplos fatores afetam a idade de forma combinada.

-   O modelo **não linear** capturou melhor a relação complexa entre faixa etária e idade.
