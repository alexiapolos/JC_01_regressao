update.packages(shiny)
update.packages('shiny')
install.packages(c("askpass", "bigD", "bitops", "cards", "commonmark", "corrplot", "curl", "data.table", "dendextend", "doBy", "emmeans", "evaluate", "flextable", "fontawesome", "fs", "future.apply", "gdtools", "glue", "gplots", "gt", "gtable", "gtsummary", "knitr", "mvtnorm", "officer", "parallelly", "progressr", "ps", "quantreg", "ranger", "Rcpp", "rmarkdown", "rstudioapi", "sf", "sys", "tinytex", "V8", "withr", "xfun"))
install.packages("chatr")
install.packages("chattr")
library(chattr)
chattr_use("test")
chattr("hello")
chattr("hello", preview = TRUE)
chattr("hello")
chattr("how old are madonna?", preview = TRUE)
chattr(prompt = "Crie um código para calcular o desvio padrão de uma matriz", prompt_build = TRUE)
a = chattr(prompt = "Crie um código para calcular o desvio padrão de uma matriz", prompt_build = TRUE)
a = chattr(prompt = "Crie um código em R para calcular o desvio padrão de uma matriz", prompt_build = TRUE)
library(recipes)
data(ad_data, package = "modeldata")
install.packages("modeldata")
library(recipes)
data(ad_data, package = "modeldata")
ad_rec <- recipe(Class ~ tau + VEGF, data = ad_data) %>%
step_normalize(all_numeric_predictors())
View(ad_rec)
data(mtcars)
install.packages("tidymodels")
library(tidymodels)
library(tidymodels)  # for the parsnip package, along with the rest of tidymodels
# Helper packages
library(readr)       # for importing data
library(broom.mixed) # for converting bayesian models to tidy tibbles
library(dotwhisker)  # for visualizing regression results
install.packages("broom.mixed")
install.packages("dotwhisker")
read_csv("https://tidymodels.org/start/models/urchins.csv") %>%
setNames(c("food_regime", "initial_volume", "width")) %>%
mutate(food_regime = factor(food_regime, levels = c("Initial", "Low", "High")))
# Helper packages
library(readr)       # for importing data
library(broom.mixed) # for converting bayesian models to tidy tibbles
library(dotwhisker)  # for visualizing regression results
urchins <-
read_csv("https://tidymodels.org/start/models/urchins.csv") %>%
setNames(c("food_regime", "initial_volume", "width")) %>%
mutate(food_regime = factor(food_regime, levels = c("Initial", "Low", "High")))
View(urchins)
View(urchins)
ggplot(urchins,
aes(x = initial_volume,
y = width,
group = food_regime,
col = food_regime)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_color_viridis_d(option = "plasma", end = .7)
width ~ initial_volume * food_regime
linear_reg()
linear_reg() %>%
set_engine("keras")
lm_mod <- linear_reg()
View(lm_mod)
lm_fit <-
lm_mod %>%
fit(width ~ initial_volume * food_regime, data = urchins)
lm_fit
tidy(lm_fit)
data(biomass, package = "modeldata")
biomass_tr <- biomass[biomass$dataset == "Training", ]
biomass_te <- biomass[biomass$dataset == "Testing", ]
median(biomass_tr$carbon)
discretize(biomass_tr$carbon, cuts = 2)
discretize(biomass_tr$carbon, cuts = 2, infs = FALSE)
discretize(biomass_tr$carbon, cuts = 2, infs = FALSE, keep_na = FALSE)
discretize(biomass_tr$carbon, cuts = 2, prefix = "maybe a bad idea to bin")
carbon_binned <- discretize(biomass_tr$carbon)
table(predict(carbon_binned, biomass_tr$carbon))
carbon_no_infs <- discretize(biomass_tr$carbon, infs = FALSE)
predict(carbon_no_infs, c(50, 100))
data(biomass, package = "modeldata")
biomass_tr <- biomass[biomass$dataset == "Training", ]
biomass_te <- biomass[biomass$dataset == "Testing", ]
discretize(biomass_tr$carbon, cuts = 2, infs = FALSE, keep_na = FALSE)
carbon_binned <- discretize(biomass_tr$carbon)
table(predict(carbon_binned, biomass_tr$carbon))
carbon_no_infs <- discretize(biomass_tr$carbon, infs = FALSE)
predict(carbon_no_infs, c(50, 100))
View(biomass_tr)
View(biomass_te)
rec <- recipe(Species ~ ., data = iris) %>%
step_center(all_numeric())
rec %>% fully_trained()
rec %>%
prep(training = iris) %>%
fully_trained()
rec <- recipe(Species ~ ., data = iris) %>%
step_center(all_numeric())
rec %>% fully_trained()
rec %>%
prep(training = iris) %>%
fully_trained()
View(rec)
setwd("~/github_repo/JC_01_regressao")
load("~/github_repo/JC_01_regressao/dados_rhc_17_tratados.RData")
View(subset)
