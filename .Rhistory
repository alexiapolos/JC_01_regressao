# Carregar pacotes necessários
library(ggplot2)
# Criar um banco de dados genérico
set.seed(123)
data1 <- data.frame(X = 1:10, Y = 1:10 + rnorm(10, sd = 1))  # R² = 0.80 (bom ajuste)
data2 <- data.frame(X = 1:10, Y = 5 + rnorm(10, sd = 5))     # R² = 0.45 (ajuste moderado)
data3 <- data.frame(X = 1:10, Y = rnorm(10, mean = 5, sd = 3)) # R² = 0.10 (ajuste ruim)
# Calcular modelos lineares e R²
model1 <- lm(Y ~ X, data = data1)
model2 <- lm(Y ~ X, data = data2)
model3 <- lm(Y ~ X, data = data3)
R2_1 <- summary(model1)$r.squared
R2_2 <- summary(model2)$r.squared
R2_3 <- summary(model3)$r.squared
# Criar gráficos
p1 <- ggplot(data1, aes(x = X, y = Y)) +
geom_point(color = "red", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
ggtitle(paste0("R² = ", round(R2_1, 2), " (excelente)")) +
theme_minimal()
p2 <- ggplot(data2, aes(x = X, y = Y)) +
geom_point(color = "red", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
ggtitle(paste0("R² = ", round(R2_2, 2), " (bom)")) +
theme_minimal()
p3 <- ggplot(data3, aes(x = X, y = Y)) +
geom_point(color = "red", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
ggtitle(paste0("R² = ", round(R2_3, 2), " (ruim)")) +
theme_minimal()
# Salvar os gráficos em um layout único
library(gridExtra)
grid.arrange(p1, p2, p3, ncol = 3)
# Carregar pacotes necessários
library(ggplot2)
# Criar um banco de dados genérico
set.seed(123)
data1 <- data.frame(X = 1:10, Y = 1:10 + rnorm(10, sd = 1))  # R² = 0.80 (bom ajuste)
data2 <- data.frame(X = 1:10, Y = 5 + rnorm(10, sd = 5))     # R² = 0.45 (ajuste moderado)
data3 <- data.frame(X = 1:10, Y = rnorm(10, mean = 5, sd = 3)) # R² = 0.10 (ajuste ruim)
# Calcular modelos lineares e R²
model1 <- lm(Y ~ X, data = data1)
model2 <- lm(Y ~ X, data = data2)
model3 <- lm(Y ~ X, data = data3)
R2_1 <- summary(model1)$r.squared
R2_2 <- summary(model2)$r.squared
R2_3 <- summary(model3)$r.squared
# Criar gráficos
p1 <- ggplot(data1, aes(x = X, y = Y)) +
geom_point(color = "firebrick", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkblue") +
ggtitle(paste0("R² = ", round(R2_1, 2), " (excelente)")) +
theme_minimal()
p2 <- ggplot(data2, aes(x = X, y = Y)) +
geom_point(color = "firebrick", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkblue") +
ggtitle(paste0("R² = ", round(R2_2, 2), " (bom)")) +
theme_minimal()
p3 <- ggplot(data3, aes(x = X, y = Y)) +
geom_point(color = "firebrick", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "darkblue") +
ggtitle(paste0("R² = ", round(R2_3, 2), " (ruim)")) +
theme_minimal()
# Salvar os gráficos em um layout único
library(gridExtra)
grid.arrange(p1, p2, p3, ncol = 3)
# Criando um conjunto de dados de exemplo
set.seed(123)
X <- 1:20
Y1 <- 2*X + rnorm(20, 0, 2)  # Alto R²
Y2 <- 0.5*X + rnorm(20, 0, 5) # Médio R²
Y3 <- rnorm(20, 10, 3)  # Baixo R²
# Criando um data frame
dados <- data.frame(X, Y1, Y2, Y3)
# Plotando os gráficos em um único painel
par(mfrow = c(1, 3))
# Gráfico 1 (Alto R²)
modelo1 <- lm(Y1 ~ X, data = dados)
plot(dados$X, dados$Y1, main = "Regressão 1", xlab = "X", ylab = "Y")
abline(modelo1, col = "blue")
r2 <- summary(modelo1)$r.squared
legend("topleft", legend = paste("R² =", round(r2, 2)), bty = "n")
# Gráfico 2 (Médio R²)
modelo2 <- lm(Y2 ~ X, data = dados)
plot(dados$X, dados$Y2, main = "Regressão 2", xlab = "X", ylab = "Y")
abline(modelo2, col = "blue")
r2 <- summary(modelo2)$r.squared
legend("topleft", legend = paste("R² =", round(r2, 2)), bty = "n")
# Gráfico 3 (Baixo R²)
modelo3 <- lm(Y3 ~ X, data = dados)
plot(dados$X, dados$Y3, main = "Regressão 3", xlab = "X", ylab = "Y")
abline(modelo3, col = "blue")
r2 <- summary(modelo3)$r.squared
legend("topleft", legend = paste("R² =", round(r2, 2)), bty = "n")
setwd("~/github/JC_01_regressao")
